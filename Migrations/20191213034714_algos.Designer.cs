// <auto-generated />
using System;
using ControlWeb.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ControlWeb.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191213034714_algos")]
    partial class algos
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ControlWeb.Models.Academia", b =>
                {
                    b.Property<int>("IdAcademia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionAcademia")
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("NombreAcademia")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("IdAcademia");

                    b.ToTable("Academia");
                });

            modelBuilder.Entity("ControlWeb.Models.Academico", b =>
                {
                    b.Property<int>("IdAcademico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FacultadIdFacultad")
                        .HasColumnType("int");

                    b.Property<int>("IdFacultad")
                        .HasColumnType("int");

                    b.Property<string>("NoControl")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Rfc")
                        .IsRequired()
                        .HasColumnType("nvarchar(13)")
                        .HasMaxLength(13);

                    b.HasKey("IdAcademico");

                    b.HasIndex("FacultadIdFacultad");

                    b.ToTable("Academico");
                });

            modelBuilder.Entity("ControlWeb.Models.DatosPersonales", b =>
                {
                    b.Property<int>("IdDatosPersonales")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deleted")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaDeNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<DateTime>("Updated")
                        .HasColumnType("datetime2");

                    b.HasKey("IdDatosPersonales");

                    b.ToTable("DatosPersonales");
                });

            modelBuilder.Entity("ControlWeb.Models.Documento", b =>
                {
                    b.Property<int>("IdDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FormatoDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("TipoDocumento")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdDocumento");

                    b.ToTable("Documento");
                });

            modelBuilder.Entity("ControlWeb.Models.Estudiante", b =>
                {
                    b.Property<int>("IdEstudiante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FacultadIdFacultad")
                        .HasColumnType("int");

                    b.Property<int>("IdFacultad")
                        .HasColumnType("int");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("IdEstudiante");

                    b.HasIndex("FacultadIdFacultad");

                    b.ToTable("Estudiante");
                });

            modelBuilder.Entity("ControlWeb.Models.Evento", b =>
                {
                    b.Property<int>("IdEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionEvento")
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<DateTime>("FechaEvento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreEvento")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("IdEvento");

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("ControlWeb.Models.Facultad", b =>
                {
                    b.Property<int>("IdFacultad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.HasKey("IdFacultad");

                    b.ToTable("Facultad");
                });

            modelBuilder.Entity("ControlWeb.Models.Organizador", b =>
                {
                    b.Property<int>("IdOrganizador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AcademicoIdAcademico")
                        .HasColumnType("int");

                    b.Property<int?>("EventoIdEvento")
                        .HasColumnType("int");

                    b.Property<int>("IdAcademico")
                        .HasColumnType("int");

                    b.Property<int>("IdEvento")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoOrganizador")
                        .HasColumnType("int");

                    b.Property<int?>("TipoOrganizadorIdTipoOrganizador")
                        .HasColumnType("int");

                    b.HasKey("IdOrganizador");

                    b.HasIndex("AcademicoIdAcademico");

                    b.HasIndex("EventoIdEvento");

                    b.HasIndex("TipoOrganizadorIdTipoOrganizador");

                    b.ToTable("Organizador");
                });

            modelBuilder.Entity("ControlWeb.Models.Permiso", b =>
                {
                    b.Property<int>("IdPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdPermiso");

                    b.ToTable("Permiso");
                });

            modelBuilder.Entity("ControlWeb.Models.Role", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasMaxLength(10);

                    b.HasKey("IdRol");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("ControlWeb.Models.SedeEvento", b =>
                {
                    b.Property<int>("IdSedeEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionSedeEvento")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("NombreSedeEvento")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("IdSedeEvento");

                    b.ToTable("SedeEvento");
                });

            modelBuilder.Entity("ControlWeb.Models.TipoOrganizador", b =>
                {
                    b.Property<int>("IdTipoOrganizador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(45)")
                        .HasMaxLength(45);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasMaxLength(15);

                    b.HasKey("IdTipoOrganizador");

                    b.ToTable("TipoOrganizador");
                });

            modelBuilder.Entity("ControlWeb.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AcademicoIdAcademico")
                        .HasColumnType("int");

                    b.Property<int>("DatosPersonalesId")
                        .HasColumnName("IdDatosPersonales")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("EstudianteIdEstudiante")
                        .HasColumnType("int");

                    b.Property<int>("IdAcademico")
                        .HasColumnType("int");

                    b.Property<int>("IdEstudiante")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("AcademicoIdAcademico");

                    b.HasIndex("DatosPersonalesId");

                    b.HasIndex("EstudianteIdEstudiante");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("ControlWeb.Models.Academico", b =>
                {
                    b.HasOne("ControlWeb.Models.Facultad", "Facultad")
                        .WithMany()
                        .HasForeignKey("FacultadIdFacultad");
                });

            modelBuilder.Entity("ControlWeb.Models.Estudiante", b =>
                {
                    b.HasOne("ControlWeb.Models.Facultad", "Facultad")
                        .WithMany()
                        .HasForeignKey("FacultadIdFacultad");
                });

            modelBuilder.Entity("ControlWeb.Models.Organizador", b =>
                {
                    b.HasOne("ControlWeb.Models.Academico", "Academico")
                        .WithMany()
                        .HasForeignKey("AcademicoIdAcademico");

                    b.HasOne("ControlWeb.Models.Evento", "Evento")
                        .WithMany()
                        .HasForeignKey("EventoIdEvento");

                    b.HasOne("ControlWeb.Models.TipoOrganizador", "TipoOrganizador")
                        .WithMany()
                        .HasForeignKey("TipoOrganizadorIdTipoOrganizador");
                });

            modelBuilder.Entity("ControlWeb.Models.Usuario", b =>
                {
                    b.HasOne("ControlWeb.Models.Academico", "Academico")
                        .WithMany()
                        .HasForeignKey("AcademicoIdAcademico");

                    b.HasOne("ControlWeb.Models.DatosPersonales", "DatosPersonales")
                        .WithMany()
                        .HasForeignKey("DatosPersonalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControlWeb.Models.Estudiante", "Estudiante")
                        .WithMany()
                        .HasForeignKey("EstudianteIdEstudiante");
                });
#pragma warning restore 612, 618
        }
    }
}
